name: C/C++ Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_windows_64:
    runs-on: windows-latest
    strategy:
      matrix:
        os: [windows-latest]
        include:
          - os: windows-latest
            COMPILER: mingw64-gcc
            LINKER: mingw64-gcc
            TARGET: Windows
            ZIP: tar -a -c -f kaiser_windows-latest-64.zip core.dll kaiser.py LICENSE README.md
    name: "Building kaiser_${{ matrix.os }} 64-bits"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: setup-msys2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: p7zip tar mingw64/mingw-w64-x86_64-gcc mingw64/mingw-w64-x86_64-make
      - name: make
        run: |
            $env:MSYSTEM = 'MINGW64'
            git submodule init
            git submodule update
            msys2 make
            ${{ matrix.zip }}
        env:
          CC: ${{ matrix.compiler }}
          LD: ${{ matrix.linker }}
          TARGET: ${{ matrix.target }}
      - name: Create Release
        id: create_release_64
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: kaiser_nightly_${{ matrix.os }}_64_${{github.sha}}
          release_name: Automated Release kaiser_nightly_${{ matrix.os }}_64_${{github.sha}}
          body: |
            Automated Release by GitHub Action CI
          draft: false
          prerelease: true
      - name: Upload Release kaiser_nightly_${{ matrix.os }}_64_${{github.sha}}
        id: upload_release_kaiser_64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release_64.outputs.upload_url }}
          asset_path: kaiser_${{ matrix.os }}-64.zip
          asset_name: kaiser_${{ matrix.os }}-64.zip
          asset_content_type: application/zip

  build_windows_32:
    runs-on: windows-latest
    strategy:
      matrix:
        os: [windows-latest]
        include:
          - os: windows-latest
            COMPILER: gcc
            LINKER: gcc
            TARGET: Windows
            ZIP: tar -a -c -f kaiser_windows-latest-32.zip core.dll kaiser.py LICENSE README.md
    name: "Building kaiser_${{ matrix.os }} 32-bits"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: setup-msys2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW32
          update: true
          install: p7zip tar
      - name: make
        run: |
            git submodule init
            git submodule update
            make
            ${{ matrix.zip }}
        env:
          CC: ${{ matrix.compiler }}
          LD: ${{ matrix.linker }}
          TARGET: ${{ matrix.target }}
      - name: Create Release
        id: create_release_32
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: kaiser_nightly_${{ matrix.os }}_32_${{github.sha}}
          release_name: Automated Release kaiser_nightly_${{ matrix.os }}_32_${{github.sha}}
          body: |
            Automated Release by GitHub Action CI
          draft: false
          prerelease: true
      - name: Upload Release kaiser_nightly_${{ matrix.os }}_32_${{github.sha}}
        id: upload_release_kaiser_32
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release_32.outputs.upload_url }}
          asset_path: kaiser_${{ matrix.os }}-32.zip
          asset_name: kaiser_${{ matrix.os }}-32.zip
          asset_content_type: application/zip

  build_unix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        include:
          - os: macos-latest
            COMPILER: clang
            LINKER: clang
            TARGET: Mac
            ZIP: zip kaiser_macos-latest.zip core.so kaiser.py resources/* LICENSE README.md
          - os: ubuntu-latest
            COMPILER: cc
            LINKER: cc
            TARGET: Linux
            ZIP: zip kaiser_ubuntu-latest.zip core.so kaiser.py resources/* LICENSE README.md
    name: "Building kaiser_${{ matrix.os }}"
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: make
      run: |
          git submodule init
          git submodule update
          make
          ${{ matrix.zip }}
      env:
        CC: ${{ matrix.compiler }}
        LD: ${{ matrix.linker }}
    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: kaiser_nightly_${{ matrix.os }}_${{github.sha}}
        release_name: Automated Release kaiser_nightly_${{ matrix.os }}_${{github.sha}}
        body: |
          Automated Release by GitHub Action CI
        draft: false
        prerelease: true
    - name: Upload Release kaiser_nightly_${{ matrix.os }}.zip
      id: upload-release-kaiser
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: kaiser_${{ matrix.os }}.zip
        asset_name: kaiser_${{ matrix.os }}.zip
        asset_content_type: application/zip
